/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  BREAKPOINTS CONFIG
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


		// min or max â€” (min is mobile first)
		$media-direction:       max;

		// Breakpoints values
		$breakpoints: (
			'xxl': 		1400px,		// large displays
			'xl': 		1200px,		// tablet landscape mode
			'l': 		992px,		// tablet portrait mode
			'm':		768px,		// big smartphones
			's':		576px,		// old smartphones
		);



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  BREAKPOINTS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	/**
	*	usage:
	*	@include breakpoint(600px / 'xl') {
	*		left: 0;
	*	}
	*
	*
	*	breakpoint: px value or key from breakpoint map (xs,s,m...)
	*	direction: max or min
	*/

	@mixin breakpoint($breakpoint, $direction: $media-direction) {

		// value exists in breakpoint map
		@if map-has-key($breakpoints, $breakpoint) {

			// Ausgabe
			@media (#{$direction}-width: #{map-get($breakpoints, $breakpoint)}) {
				@content;
			}
		}
		@else {

			@if unitless($breakpoint) {
				$breakpoint: $breakpoint + 0px;
			}

			// Ausgabe
			@media (#{$direction}-width: $breakpoint) {
				@content;
			}
		}
	}